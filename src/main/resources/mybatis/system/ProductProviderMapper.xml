<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.provider.mapper.ProductProviderMapper">
    
    <resultMap type="ProductProvider" id="ProductProviderResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="contactName"    column="contact_name"    />
        <result property="contactPhone"    column="contact_phone"    />
        <result property="address"    column="address"    />
    </resultMap>

    <sql id="selectProductProviderVo">
        select id, name, contact_name, contact_phone, address from product_provider
    </sql>

    <select id="selectProductProviderList" parameterType="ProductProvider" resultMap="ProductProviderResult">
        <include refid="selectProductProviderVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="contactName != null  and contactName != ''"> and contact_name like concat('%', #{contactName}, '%')</if>
            <if test="contactPhone != null  and contactPhone != ''"> and contact_phone = #{contactPhone}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
        </where>
      ORDER by id desc
    </select>
    
    <select id="selectProductProviderById" parameterType="Long" resultMap="ProductProviderResult">
        <include refid="selectProductProviderVo"/>
        where id = #{id}
    </select>

  <select id="selectNameById" resultType="java.lang.String">
    select name from product_provider
    where id = #{id}
  </select>

  <insert id="insertProductProvider" parameterType="ProductProvider" useGeneratedKeys="true" keyProperty="id">
        insert into product_provider
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="contactName != null">contact_name,</if>
            <if test="contactPhone != null">contact_phone,</if>
            <if test="address != null">address,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="contactName != null">#{contactName},</if>
            <if test="contactPhone != null">#{contactPhone},</if>
            <if test="address != null">#{address},</if>
         </trim>
    </insert>

    <update id="updateProductProvider" parameterType="ProductProvider">
        update product_provider
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="contactName != null">contact_name = #{contactName},</if>
            <if test="contactPhone != null">contact_phone = #{contactPhone},</if>
            <if test="address != null">address = #{address},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteProductProviderById" parameterType="Long">
        delete from product_provider where id = #{id}
    </delete>

    <delete id="deleteProductProviderByIds" parameterType="String">
        delete from product_provider where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>